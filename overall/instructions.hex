00000013  // addi x0, x0, 0  
00100093  // addi x1, x0, 1  
00200113  // addi x2, x0, 2  
00300193  // addi x3, x0, 3  
00400213  // addi x4, x0, 4  
00500293  // addi x5, x0, 5  
00600313  // addi x6, x0, 6  
00700393  // addi x7, x0, 7  
00800413  // addi x8, x0, 8  
00900493  // addi x9, x0, 9  
00A00513  // addi x10, x0, 10  
00B00593  // addi x11, x0, 11  
00C00613  // addi x12, x0, 12  
00D00693  // addi x13, x0, 13  
00E00713  // addi x14, x0, 14  
00F00793  // addi x15, x0, 15  
01000813  // addi x16, x0, 16  
01100893  // addi x17, x0, 17  
01200913  // addi x18, x0, 18  
01300993  // addi x19, x0, 19  
01400A13  // addi x20, x0, 20  
01500A93  // addi x21, x0, 21  
01600B13  // addi x22, x0, 22  
01700B93  // addi x23, x0, 23  
01800C13  // addi x24, x0, 24  
01900C93  // addi x25, x0, 25  
01A00D13  // addi x26, x0, 26  
01B00D93  // addi x27, x0, 27  
01C00E13  // addi x28, x0, 28  
01D00E93  // addi x29, x0, 29  
01E00F13  // addi x30, x0, 30  
01F00F93  // addi x31, x0, 31  

# Perform operations

002081b3  // add x3, x1, x2   (x3 = x1 + x2)
00310233  // add x4, x2, x3   (x4 = x2 + x3)
405182b3  // sub x5, x3, x5   (x5 = x3 - x5)
006283b3  // and x7, x5, x6   (x7 = x5 & x6)
00730433  // or x8, x6, x7    (x8 = x6 | x7)
008405b3  // add x11, x8, x8  (x11 = x8 + x8)
40958633  // sub x12, x11, x9 (x12 = x11 - x9)
00C60733  // and x14, x12, x12 (x14 = x12 & x12)
00D70833  // or x16, x13, x13  (x16 = x13 | x13)
0004b503  // ld x10, 0(x9)   (Load x10 from memory at address in x9)
0084b583  // ld x11, 8(x9)   (Load x11 from memory at address x9 + 8)
0104b603  // ld x12, 16(x9)  (Load x12 from memory at address x9 + 16)
0184b683  // ld x13, 24(x9)  (Load x13 from memory at address x9 + 24)
0004b023  // sd x0, 0(x9)    (Store x0 at address in x9)
0084b023  // sd x1, 8(x9)    (Store x1 at address x9 + 8)
0104b023  // sd x2, 16(x9)   (Store x2 at address x9 + 16)
0184b023  // sd x3, 24(x9)   (Store x3 at address x9 + 24)
00A58C63  // beq x11, x10, 12  (Branch if x11 == x10, offset 12)
00C60E63  // beq x12, x12, 28  (Branch if x12 == x12, offset 28)
