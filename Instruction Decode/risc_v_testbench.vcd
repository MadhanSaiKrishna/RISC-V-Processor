$date
	Sun Mar  2 16:33:01 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench_risc_v $end
$var wire 5 ! rs2 [4:0] $end
$var wire 5 " rs1 [4:0] $end
$var wire 5 # rd [4:0] $end
$var wire 7 $ opcode [6:0] $end
$var wire 32 % imm [31:0] $end
$var wire 7 & funct7 [6:0] $end
$var wire 3 ' funct3 [2:0] $end
$var wire 1 ( RegWrite $end
$var wire 1 ) MemtoReg $end
$var wire 1 * MemWrite $end
$var wire 1 + MemRead $end
$var wire 1 , Branch $end
$var wire 1 - ALUSrc $end
$var wire 2 . ALUOp [1:0] $end
$var reg 32 / instruction [31:0] $end
$scope module cu $end
$var wire 2 0 ALUOp [1:0] $end
$var wire 1 - ALUSrc $end
$var wire 1 , Branch $end
$var wire 1 + MemRead $end
$var wire 1 * MemWrite $end
$var wire 1 ) MemtoReg $end
$var wire 1 ( RegWrite $end
$var wire 7 1 opcode [6:0] $end
$var reg 2 2 ALUOp_reg [1:0] $end
$var reg 1 3 ALUSrc_reg $end
$var reg 1 4 Branch_reg $end
$var reg 1 5 MemRead_reg $end
$var reg 1 6 MemWrite_reg $end
$var reg 1 7 MemtoReg_reg $end
$var reg 1 8 RegWrite_reg $end
$upscope $end
$scope module id $end
$var wire 3 9 funct3 [2:0] $end
$var wire 7 : funct7 [6:0] $end
$var wire 32 ; imm [31:0] $end
$var wire 32 < instruction [31:0] $end
$var wire 7 = opcode [6:0] $end
$var wire 5 > rd [4:0] $end
$var wire 5 ? rs1 [4:0] $end
$var wire 5 @ rs2 [4:0] $end
$var reg 3 A funct3_reg [2:0] $end
$var reg 7 B funct7_reg [6:0] $end
$var reg 32 C imm_reg [31:0] $end
$var reg 7 D opcode_reg [6:0] $end
$var reg 5 E rd_reg [4:0] $end
$var reg 5 F rs1_reg [4:0] $end
$var reg 5 G rs2_reg [4:0] $end
$upscope $end
$scope task display_instruction $end
$var reg 32 H inst [31:0] $end
$var reg 256 I inst_name [255:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
x6
x5
x4
x3
bx 2
bx 1
bx 0
bx /
bx .
x-
x,
x+
x*
x)
x(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5
1(
18
0-
03
0*
06
b10 .
b10 0
b10 2
0)
07
0+
05
0,
04
b0 %
b0 ;
b0 C
b0 &
b0 :
b0 B
b0 '
b0 9
b0 A
b100 #
b100 >
b100 E
b111 !
b111 @
b111 G
b110 "
b110 ?
b110 F
b110011 $
b110011 1
b110011 =
b110011 D
b11100110000001000110011 /
b11100110000001000110011 <
#15
b100000 &
b100000 :
b100000 B
b1001 #
b1001 >
b1001 E
b1011 !
b1011 @
b1011 G
b1010 "
b1010 ?
b1010 F
b1000000101101010000010010110011 /
b1000000101101010000010010110011 <
b100000101000100010001000010000001111000001101000010110000100000011110000011011000101100001000000111100000110111 I
b11100110000001000110011 H
#25
b111 '
b111 9
b111 A
b0 &
b0 :
b0 B
b1100 #
b1100 >
b1100 E
b1110 !
b1110 @
b1110 G
b1101 "
b1101 ?
b1101 F
b111001101111011000110011 /
b111001101111011000110011 <
b1010011010101010100001000100000011110000011100100101100001000000111100000110001001100000010110000100000011110000011000100110001 I
b1000000101101010000010010110011 H
#35
b0 '
b0 9
b0 A
b1111 #
b1111 >
b1111 E
b10001 !
b10001 @
b10001 G
b10000 "
b10000 ?
b10000 F
b1000110000000011110110011 /
b1000110000000011110110011 <
b100000101001110010001000010000001111000001100010011001000101100001000000111100000110001001100110010110000100000011110000011000100110100 I
b111001101111011000110011 H
#45
1)
17
1+
15
1-
13
1(
18
b0 .
b0 0
b0 2
b10000 %
b10000 ;
b10000 C
b11 '
b11 9
b11 A
b1000 #
b1000 >
b1000 E
b0 !
b0 @
b0 G
b10100 "
b10100 ?
b10100 F
b11 $
b11 1
b11 =
b11 D
b1000010100011010000000011 /
b1000010100011010000000011 <
b1001111010100100010000001111000001100010011010100101100001000000111100000110001001101100010110000100000011110000011000100110111 I
b1000110000000011110110011 H
#55
1*
16
0(
08
1-
13
0)
07
0+
05
b110 !
b110 @
b110 G
b11111111111111111111111111111000 %
b11111111111111111111111111111000 ;
b11111111111111111111111111111000 C
b0 '
b0 9
b0 A
b0 #
b0 >
b0 E
b10111 "
b10111 ?
b10111 F
b100011 $
b100011 1
b100011 =
b100011 D
b11111110011010111000110000100011 /
b11111110011010111000110000100011 <
b100110001000100001000000111100000111000001011000010000000110001001101100010100001111000001100100011000000101001 I
b1000010100011010000000011 H
#65
b1 .
b1 0
b1 2
1,
14
0-
03
0*
06
b10000 %
b10000 ;
b10000 C
b11001 !
b11001 @
b11001 G
b11000 "
b11000 ?
b11000 F
b1100011 $
b1100011 1
b1100011 =
b1100011 D
b1100111000000100001100011 /
b1100111000000100001100011 <
b1010011010001000010000001111000001100100011001000101100001000000010110100110010001101000010100001111000001100100011001100101001 I
b11111110011010111000110000100011 H
#75
b1000010010001010101000100100000011110000011001000110100001011000010000001111000001100100011010100101100001000000011000100110110 I
b1100111000000100001100011 H
